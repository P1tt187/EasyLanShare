    # In this file you can override any option defined in the reference files.
    # Copy in parts of the reference files and modify as you please.
     
    akka {
     
	    # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
	    #event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
	     
	    # Log level used by the configured loggers (see "event-handlers") as soon
	    # as they have been started; before that, see "stdout-loglevel"
	    # Options: OFF, ERROR, WARNING, INFO, DEBUG
	    akka.loglevel = "DEBUG"
        
        #log-config-on-start = on
	     
	    # Log level for the very basic logger activated during AkkaApplication startup
	    # Options: OFF, ERROR, WARNING, INFO, DEBUG
	    akka.stdout-loglevel = "DEBUG"
	     
	    actor {
		    default-dispatcher {
		    # Throughput for default Dispatcher, set to 1 for as fair as possible
		    provider = "akka.remote.RemoteActorRefProvider"
		    throughput = 10
		    }
		    
		     serializers {
				proto = "akka.remote.serialization.ProtobufSerializer"
				daemon-create = "akka.remote.serialization.DaemonMsgCreateSerializer"
				}
 
 
			serialization-bindings {
				# Since com.google.protobuf.Message does not extend Serializable but
				# GeneratedMessage does, need to use the more specific one here in order
				# to avoid ambiguity
				"com.google.protobuf.GeneratedMessage" = proto
				"akka.remote.DaemonMsgCreate" = daemon-create
			}
	    }
	     
		    remote {
				   # server {
				    # The port clients should connect to. Default is 2552 (AKKA)
				    # port = 2562
				    #}
				    
				   transport = "akka.remote.netty.NettyRemoteTransport"
  					netty {
    				#	hostname = "127.0.0.1"
    					port = 2552
    					 # (O) In case of increased latency / overflow how long should we wait
						# (blocking the sender) until we deem the send to be cancelled?
						# 0 means "never backoff", any positive number will indicate the time to
						# block at most.
						backoff-timeout = 0ms
						 
						# (I&O) Generate your own with the script availbale in
						# '$AKKA_HOME/scripts/generate_config_with_secure_cookie.sh' or using
						# 'akka.util.Crypt.generateSecureCookie'
						secure-cookie = ""
						 
						# (I) Should the remote server require that its peers share the same
						# secure-cookie (defined in the 'remote' section)?
						require-cookie = off
						 
						# (I) Reuse inbound connections for outbound messages
						use-passive-connections = on
						 
						# (I) EXPERIMENTAL If "<id.of.dispatcher>" then the specified dispatcher
						# will be used to accept inbound connections, and perform IO. If "" then
						# dedicated threads will be used.
						#
						# CAUTION: This might lead to the used dispatcher not shutting down properly!
						# - may prevent the JVM from shutting down normally
						# - may leak threads when shutting down an ActorSystem
						#
						use-dispatcher-for-io = ""
						 
						# (I) The hostname or ip to bind the remoting to,
						# InetAddress.getLocalHost.getHostAddress is used if empty
						hostname = ""
						 
						# (I) The default remote server port clients should connect to.
						# Default is 2552 (AKKA), use 0 if you want a random available port
						# This port needs to be unique for each actor system on the same machine.
						port = 2552
						 
						# (O) The address of a local network interface (IP Address) to bind to when
						# creating outbound connections. Set to "" or "auto" for automatic selection
						# of local address.
						outbound-local-address = "auto"
						 
						# (I&O) Increase this if you want to be able to send messages with large
						# payloads
						message-frame-size = 1 MiB
						 
						# (O) Sets the connectTimeoutMillis of all outbound connections,
						# i.e. how long a connect may take until it is timed out
						connection-timeout = 120s
						 
						# (I) Sets the size of the connection backlog
						backlog = 4096
						 
						# (I) Sets the SO_REUSE_ADDR flag, valid values are "on", "off" and "off-for-windows"
						# due to the following Windows bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4476378
						# "off-for-windows" of course means that it's "on" for all other platforms
						reuse-address = off-for-windows
						 
						# (I) Length in akka.time-unit how long core threads will be kept alive if
						# idling
						execution-pool-keepalive = 60s
						 
						# (I) Size in number of threads of the core pool of the remote execution
						# unit.
						# A value of 0 will turn this off, which is can lead to deadlocks under
						# some configurations!
						execution-pool-size = 4
						 
						# (I) Maximum channel size, 0 for off
						max-channel-memory-size = 0b
						 
						# (I) Maximum total size of all channels, 0 for off
						max-total-memory-size = 0b
						 
						# (I&O) Sets the high water mark for the in and outbound sockets,
						# set to 0b for platform default
						write-buffer-high-water-mark = 0b
						 
						# (I&O) Sets the low water mark for the in and outbound sockets,
						# set to 0b for platform default
						write-buffer-low-water-mark = 0b
						 
						# (I&O) Sets the send buffer size of the Sockets,
						# set to 0b for platform default
						send-buffer-size = 0b
						 
						# (I&O) Sets the receive buffer size of the Sockets,
						# set to 0b for platform default
						receive-buffer-size = 0b
						 
						# (O) Time between reconnect attempts for active clients
						reconnect-delay = 5s
						 
						# (O) Read inactivity period (lowest resolution is seconds)
						# after which active client connection is shutdown;
						# will be re-established in case of new communication requests.
						# A value of 0 will turn this feature off
						read-timeout = 0s
						 
						# (O) Write inactivity period (lowest resolution is seconds)
						# after which a heartbeat is sent across the wire.
						# A value of 0 will turn this feature off
						write-timeout = 10s
						 
						# (O) Inactivity period of both reads and writes (lowest resolution is
						# seconds) after which active client connection is shutdown; will be
						# re-established in case of new communication requests.
						# A value of 0 will turn this feature off
						all-timeout = 0s
						 
						# (O) Maximum time window that a client should try to reconnect for
						reconnection-time-window = 600s
  						}
  					log-sent-messages = on
  					log-received-messages = on
  					
  					 # Enable untrusted mode for full security of server managed actors, prevents
					# system messages to be send by clients, e.g. messages like 'Create',
					# 'Suspend', 'Resume', 'Terminate', 'Supervise', 'Link' etc.
					untrusted-mode = off
					 
					# Timeout for ACK of cluster operations, like checking actor out etc.
					remote-daemon-ack-timeout = 30s
				    
		    }
    }

